{"ast":null,"code":"var _jsxFileName = \"D:\\\\barcode\\\\barcode-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [text, setText] = useState('');\n  const [format, setFormat] = useState('code128');\n  const [pdfBlob, setPdfBlob] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/api/barcode/generate', {\n        text,\n        format\n      }, {\n        responseType: 'blob' // Specify response type as blob\n      });\n\n      // Set the received blob data\n      setPdfBlob(response.data);\n    } catch (error) {\n      console.error('Error generating barcode', error);\n    }\n  };\n  const handleDownload = () => {\n    // Create a URL for the blob data and initiate download\n    const url = window.URL.createObjectURL(new Blob([pdfBlob]));\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'barcode.pdf';\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Text: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          onChange: e => setText(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Format: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: format,\n          onChange: e => setFormat(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"code128\",\n            children: \"Code 128\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"qrcode\",\n            children: \"QR Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Barcode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), pdfBlob && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload,\n        children: \"Download PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"anfmTLEV/K3whuAH3sNJ8barYrs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","text","setText","format","setFormat","pdfBlob","setPdfBlob","handleSubmit","e","preventDefault","response","post","responseType","data","error","console","handleDownload","url","window","URL","createObjectURL","Blob","a","document","createElement","href","download","body","appendChild","click","removeChild","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","onClick","_c","$RefreshReg$"],"sources":["D:/barcode/barcode-app/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n    const [text, setText] = useState('');\n    const [format, setFormat] = useState('code128');\n    const [pdfBlob, setPdfBlob] = useState(null);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            const response = await axios.post('http://localhost:5000/api/barcode/generate', { text, format }, {\n                responseType: 'blob' // Specify response type as blob\n            });\n\n            // Set the received blob data\n            setPdfBlob(response.data);\n        } catch (error) {\n            console.error('Error generating barcode', error);\n        }\n    };\n\n    const handleDownload = () => {\n        // Create a URL for the blob data and initiate download\n        const url = window.URL.createObjectURL(new Blob([pdfBlob]));\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'barcode.pdf';\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n    };\n\n    return (\n        <div className=\"App\">\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Text: </label>\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} required />\n                </div>\n                <div>\n                    <label>Format: </label>\n                    <select value={format} onChange={(e) => setFormat(e.target.value)}>\n                        <option value=\"code128\">Code 128</option>\n                        <option value=\"qrcode\">QR Code</option>\n                        {/* Add other barcode formats as needed */}\n                    </select>\n                </div>\n                <button type=\"submit\">Generate Barcode</button>\n            </form>\n            {pdfBlob && (\n                <div>\n                    <button onClick={handleDownload}>Download PDF</button>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}